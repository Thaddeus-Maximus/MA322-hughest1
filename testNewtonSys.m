lastName='Hughes';
more off;
tol = 10^-6;
F = {@(x) [x(1)^2 + x(2)^2 - 1; x(1)^2 - x(2)], ...
     @(x) [x(1)^2 + x(2)^2 + x(3)^2 - 1; x(1)^2 + x(2)^2 - x(3); x(1) + x(2) + x(3)], ...
     @(x) [x(1)^2 + x(2)^2 + x(3)^2 - 1; x(1)^2 + x(2)^2 - x(3); x(1) + x(2) + x(3)], ...
     @(x) [sin(x(1))*cos(x(2)); x(1)*x(2) - 1], ...
     @(x) [3 5 9 1; 1 -1 1 -1; 2 0 1 2; 3 -2 0 1]*x - [18; 0; 5; 2], ...
     @(x) [sin(x(1)) + cos(x(2)) - 4; x(1)*x(2) - 1] };
DF = {@(x) [2*x(1),  2*x(2); 2*x(1), -1], ...
      @(x) [2*x(1), 2*x(2),  2*x(3); 2*x(1), 2*x(2), -1; 1, 1, 1], ...
      @(x) [2*x(1), 2*x(2),  2*x(3); 2*x(1), 2*x(2), -1; 1, 1, 1], ...
      @(x) [cos(x(1))*cos(x(2)), -sin(x(1))*sin(x(2)); x(2), x(1)], ...
      @(x) [3 5 9 1; 1 -1 1 -1; 2 0 1 2; 3 -2 0 1], ...
      @(x) [cos(x(1)), -sin(x(2)); x(2), x(1)]};
X = {[1;1], [0.1; 0; -0.1], [0.1; 0; -0.1], [1;1], [0;0;0;0], [0.1; 1]};
numItr = {100, 100, 4, 10, 50, 1000};


for t = 1:length(F)
   fprintf('\n\n#####  New Test #####\n\n')

   cmd1 = sprintf('[x1, nfx1, itr1, s1] = %s_NewtonSys(%s,%s,%s,%1.6f,%d)', ...
       lastName,func2str(F{t}),func2str(DF{t}),mat2str(X{t}),tol,numItr{t});
   cmd2 = sprintf('[x2, nfx2, itr2, s2] = %s_NewtonSys(%s,%s,%s,%1.6f,%d)', ...
       'Holder',func2str(F{t}),func2str(DF{t}),mat2str(X{t}),tol,numItr{t});

   fprintf('Your code run as:\n%s\n\nResults in\n',cmd1)
   eval(cmd1)
   fprintf('\n\nMy code run as:\n%s\n\nResults in\n',cmd2)
   eval(cmd2)

   fprintf('\n\nPress enter to continue\n')
   pause
end
